{:rename-macros {}, :renames {}, :externs {goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {}, :excludes #{}, :name meeting.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, subs meeting.subs, meeting.subs meeting.subs}, :cljs.spec/speced-vars [], :uses nil, :defs {home-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([]))}, :name meeting.views/home-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, meeting-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([]))}, :name meeting.views/meeting-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, panels {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 24, :column 8, :end-line 24, :end-column 14, :private true, :arglists (quote ([panel-name]))}, :private true, :name meeting.views/panels, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 14, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, show-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([panel-name]))}, :name meeting.views/show-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, main-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([]))}, :name meeting.views/main-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:meeting.subs/db :pre :div :h4 :meeting.subs/active-panel :href :a}, :order [:div :a :href :meeting.subs/active-panel :h4 :pre :meeting.subs/db]}, :doc nil}