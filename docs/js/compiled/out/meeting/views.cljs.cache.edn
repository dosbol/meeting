{:rename-macros {}, :renames {}, :externs {document {getElementById {}}, Object {value {}}, goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {}, :excludes #{}, :name meeting.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, reagent reagent.core, reagent.core reagent.core, subs meeting.subs, meeting.subs meeting.subs, events meeting.events, meeting.events meeting.events}, :cljs.spec/speced-vars [], :uses nil, :defs {show-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 99, :column 7, :end-line 99, :end-column 17, :arglists (quote ([panel-name]))}, :name meeting.views/show-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, panels {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 91, :column 8, :end-line 91, :end-column 14, :private true, :arglists (quote ([panel-name]))}, :private true, :name meeting.views/panels, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 14, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, input-title {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 45, :column 7, :end-line 45, :end-column 18, :arglists (quote ([{:keys [props title]}]))}, :name meeting.views/input-title, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 18, :method-params ([p__33509]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [props title]}]))}, home-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 36, :column 7, :end-line 36, :end-column 17, :arglists (quote ([]))}, :name meeting.views/home-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([]))}, :name meeting.views/main-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, meeting-row {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 10, :column 7, :end-line 10, :end-column 18, :arglists (quote ([]))}, :name meeting.views/meeting-row, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([]))}, :name meeting.views/create-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, view-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([]))}, :name meeting.views/view-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, meeting-table {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 26, :column 7, :end-line 26, :end-column 20, :arglists (quote ([]))}, :name meeting.views/meeting-table, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, edit-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 78, :column 7, :end-line 78, :end-column 17, :arglists (quote ([]))}, :name meeting.views/edit-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:thead :meeting.subs/db :meeting.subs/meetings :tbody :table :pre :key :button :td :value :th :tr :type :meeting.events/update-meeting! :on-click :title :div :h4 :meeting.events/delete-meeting! :id :meeting.subs/active-meeting :meeting.subs/active-panel :meeting.events/set-hash! :form :input :meeting.events/create-meeting! :on-change :href :a :props}, :order [:id :title :tr :td :a :href :on-click :meeting.events/delete-meeting! :meeting.subs/meetings :table :thead :th :tbody :key :div :props :input :type :value :on-change :form :button :meeting.events/create-meeting! :meeting.events/set-hash! :meeting.subs/active-meeting :meeting.events/update-meeting! :meeting.subs/active-panel :h4 :pre :meeting.subs/db]}, :doc nil}