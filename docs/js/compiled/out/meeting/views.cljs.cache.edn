{:rename-macros {}, :renames {}, :externs {document {getElementById {}}, Object {value {}}, goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {}, :excludes #{}, :name meeting.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, reagent reagent.core, reagent.core reagent.core, subs meeting.subs, meeting.subs meeting.subs, events meeting.events, meeting.events meeting.events}, :cljs.spec/speced-vars [], :uses nil, :defs {meeting-item {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([]))}, :name meeting.views/meeting-item, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, meeting-list {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([]))}, :name meeting.views/meeting-list, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([]))}, :name meeting.views/home-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, input-title {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([{:keys [props]}]))}, :name meeting.views/input-title, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 18, :method-params ([p__32484]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [props]}]))}, meeting-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([]))}, :name meeting.views/meeting-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, panels {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 59, :column 8, :end-line 59, :end-column 14, :private true, :arglists (quote ([panel-name]))}, :private true, :name meeting.views/panels, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 14, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, show-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([panel-name]))}, :name meeting.views/show-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, main-panel {:protocol-inline nil, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\views.cljs", :line 68, :column 7, :end-line 68, :end-column 17, :arglists (quote ([]))}, :name meeting.views/main-panel, :variadic false, :file "src\\cljs\\meeting\\views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:meeting.subs/db :home-panel :meeting.subs/meetings :pre :key :button :li :value :type :ul#meeting-list :on-click :title :div.view :div :h4 :meeting.events/delete-meeting! :label :id :meeting.subs/active-panel :meeting.events/set-hash! :meeting.events/set-active-panel :form :input :meeting.events/create-meeting! :on-change :href :a :props}, :order [:id :title :li :div.view :label :button :on-click :meeting.events/delete-meeting! :meeting.subs/meetings :ul#meeting-list :key :div :a :href :props :input :type :value :on-change :form :meeting.events/create-meeting! :meeting.events/set-active-panel :home-panel :meeting.events/set-hash! :meeting.subs/active-panel :h4 :pre :meeting.subs/db]}, :doc nil}