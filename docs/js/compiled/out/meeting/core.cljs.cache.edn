{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name meeting.core, :imports nil, :requires {reagent reagent.core, views meeting.views, meeting.views meeting.views, reagent.core reagent.core, meeting.routes meeting.routes, routes meeting.routes, config meeting.config, meeting.events meeting.events, events meeting.events, meeting.config meeting.config, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\core.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([]))}, :name meeting.core/dev-setup, :variadic false, :file "src\\cljs\\meeting\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\core.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([]))}, :name meeting.core/mount-root, :variadic false, :file "src\\cljs\\meeting\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\core.cljs", :line 20, :column 16, :end-line 20, :end-column 20, :export true, :arglists (quote ([]))}, :name meeting.core/init, :variadic false, :file "src\\cljs\\meeting\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:meeting.events/initialize-db}, :order [:meeting.events/initialize-db]}, :doc nil}