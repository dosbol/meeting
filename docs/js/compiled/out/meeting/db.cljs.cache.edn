{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name meeting.db, :imports nil, :requires {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, cljs-time.core cljs-time.core}, :cljs.spec/speced-vars [], :uses {minutes cljs-time.core, from-now cljs-time.core}, :defs {default-db {:name meeting.db/default-db, :file "src\\cljs\\meeting\\db.cljs", :line 18, :column 1, :end-line 18, :end-column 16, :meta {:file "c:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\db.cljs", :line 18, :column 6, :end-line 18, :end-column 16}, :tag cljs.core/IMap}}, :cljs.spec/registry-ref [[:meeting.db/title cljs.core/string?] [:meeting.db/begin cljs.core/int?] [:meeting.db/id cljs.core/int?] [:meeting.db/status #{:done :planned :inprocess}] [:meeting.db/meetings (cljs.spec.alpha/and (cljs.spec.alpha/map-of :meeting.db/id :meeting.db/meeting) (fn* [p1__46359#] (cljs.core/instance? cljs.core/PersistentTreeMap p1__46359#)))] [:meeting.db/end cljs.core/int?] [:meeting.db/showing #{:all :filter}] [:meeting.db/meeting (cljs.spec.alpha/keys :req-un [:meeting.db/id :meeting.db/title :meeting.db/status :meeting.db/begin :meeting.db/end])] [:meeting.db/db (cljs.spec.alpha/keys :req-un [:meeting.db/meetings :meeting.db/showing])]], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{p1__46359# :meeting.db/title :req-un :opt-un :gfn :meeting.db/begin :pred-exprs :into :timezone :keys-pred :meeting.db/id :showing :done :opt-keys :meeting.db/status cljs.spec.alpha/and :cljs.spec.alpha/kind-form cljs.core/int? :planned :meeting.db/meetings cljs.core/string? :req-specs :start cljs.spec.alpha/tuple cljs.core/contains? cljs.core/map? :cljs.spec.alpha/cpred :all :greenwich % :meeting.db/end :title cljs.spec.alpha/keys :begin :req :filter :meeting.db/showing :inprocess fn* :status :id :kind cljs.spec.alpha/map-of :req-keys cljs.core/fn :opt-specs :meeting.db/meeting cljs.core/PersistentTreeMap :pred-forms :meeting.db/db :cljs.spec.alpha/kfn :meetings :end :cljs.spec.alpha/conform-all cljs.core/instance? :cljs.spec.alpha/describe :opt}, :order [:meeting.db/id cljs.core/int? :meeting.db/title cljs.core/string? :meeting.db/status :done :planned :inprocess :meeting.db/begin :meeting.db/end :meeting.db/meeting cljs.spec.alpha/keys :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms :opt :id :title :status :begin :end cljs.core/fn % cljs.core/map? cljs.core/contains? :meeting.db/meetings cljs.spec.alpha/and cljs.spec.alpha/map-of fn* p1__46359# cljs.core/instance? cljs.core/PersistentTreeMap cljs.spec.alpha/tuple :into :cljs.spec.alpha/kind-form :cljs.spec.alpha/cpred :kind :cljs.spec.alpha/kfn :cljs.spec.alpha/conform-all :cljs.spec.alpha/describe :meeting.db/showing :all :filter :meeting.db/db :meetings :showing :timezone :start :greenwich]}, :doc nil}