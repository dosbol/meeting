{:rename-macros {}, :renames {}, :externs {window {location {hash {}}}}, :use-macros {}, :excludes #{}, :name meeting.events, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, db meeting.db, meeting.db meeting.db}, :cljs.spec/speced-vars [], :uses nil, :defs {last-id {:name meeting.events/last-id, :file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\events.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\src\\cljs\\meeting\\events.cljs", :line 6, :column 10, :end-line 6, :end-column 17}, :tag any}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:active-meeting-id :meeting.events/initialize-db :db :change-loc :meeting.events/update-meeting! :meeting.events/unset-active-meeting-id :meeting.events/delete-meeting! :id :meeting.events/set-hash! :active-panel :meeting.events/set-active-panel :meetings :meeting.events/create-meeting! :meeting.events/set-active-meeting-id :meeting-id}, :order [:meeting-id :meeting.events/initialize-db :meeting.events/set-active-panel :active-panel :meeting.events/set-active-meeting-id :active-meeting-id :meeting.events/unset-active-meeting-id :meeting.events/delete-meeting! :meetings :meeting.events/create-meeting! :db :id :meeting.events/set-hash! :change-loc :meeting.events/update-meeting!]}, :doc nil}