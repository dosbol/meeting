{:rename-macros {}, :renames {}, :externs {document {createElement {}, body {appendChild {}}}, onbeforeunload {}, setTimeout {}}, :use-macros {reaction reagent.ratom}, :excludes #{}, :name re-frisk.core, :imports nil, :requires {reagent reagent.core, re-frisk.devtool re-frisk.devtool, data re-frisk.data, reagent.ratom reagent.ratom, reagent.core reagent.core, re-frisk.data re-frisk.data, re-frame.subs re-frame.subs, devtool re-frisk.devtool, re-frame re-frame.core, re-frame.db re-frame.db, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {subscribe re-frame.core, app-db re-frame.db, query->reaction re-frame.subs}, :defs {enable-frisk! {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 68, :column 7, :end-line 68, :end-column 20, :arglists (quote ([& params])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name re-frisk.core/enable-frisk!, :variadic true, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists ([& params])}, reg-view {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 87, :column 7, :end-line 87, :end-column 15, :arglists (quote ([view subs events]))}, :name re-frisk.core/reg-view, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 15, :method-params ([view subs events]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 3, :fn-var true, :arglists (quote ([view subs events]))}, post-event-callback {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 11, :column 7, :end-line 11, :end-column 26, :arglists (quote ([value]))}, :name re-frisk.core/post-event-callback, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 26, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, render-re-frisk {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 30, :column 8, :end-line 30, :end-column 23, :private true, :arglists (quote ([params]))}, :private true, :name re-frisk.core/render-re-frisk, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 23, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params]))}, add-data {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 74, :column 7, :end-line 74, :end-column 15, :arglists (quote ([key data]))}, :name re-frisk.core/add-data, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 15, :method-params ([key data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key data]))}, add-in-data {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 77, :column 7, :end-line 77, :end-column 18, :arglists (quote ([keys data]))}, :name re-frisk.core/add-in-data, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 18, :method-params ([keys data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys data]))}, re-frame-sub {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([& rest])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(rest)], :arglists ([& rest]), :arglists-meta (nil)}}, :name re-frisk.core/re-frame-sub, :variadic true, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(rest)], :arglists ([& rest]), :arglists-meta (nil)}, :method-params [(rest)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists ([& rest])}, unmount-view {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 95, :column 7, :end-line 95, :end-column 19, :arglists (quote ([view]))}, :name re-frisk.core/unmount-view, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 19, :method-params ([view]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([view]))}, enable-re-frisk! {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 44, :column 7, :end-line 44, :end-column 23, :arglists (quote ([& [opts]])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([opts])], :arglists ([& [opts]]), :arglists-meta (nil)}}, :name re-frisk.core/enable-re-frisk!, :variadic true, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([opts])], :arglists ([& [opts]]), :arglists-meta (nil)}, :method-params [([opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists ([& [opts]])}, watch-context {:name re-frisk.core/watch-context, :file "docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 80, :column 1, :end-line 80, :end-column 19, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk\\core.cljs", :line 80, :column 6, :end-line 80, :end-column 19}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core, reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:indx :events :re-frisk/update-db :event :re-frisk-watcher :id :id-handler :re-frisk.core/db :events? :re-frisk-watch-context :coeffects :subs :contexts :prefs :before :app-db :views :win}, :order [:contexts :event :indx :id-handler :re-frisk.core/db :win :app-db :prefs :events? :re-frisk-watcher :id :re-frisk-watch-context :before :coeffects :views :events :subs :re-frisk/update-db]}, :doc nil}