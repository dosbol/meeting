{:rename-macros {}, :renames {}, :externs {setTimeout {}}, :use-macros {reaction reagent.ratom, handler-fn re-com.core}, :excludes #{}, :name re-frisk-shell.re-com.views, :imports nil, :requires {reagent reagent.core, re-frisk-shell.re-com.splits re-frisk-shell.re-com.splits, re-com.core re-com.core, reagent.core reagent.core, re-frisk-shell.frisk re-frisk-shell.frisk, re-frisk-shell.re-com.vendors re-frisk-shell.re-com.vendors, str clojure.string, clojure.string clojure.string, frisk re-frisk-shell.frisk, re-frisk-shell.re-com.ui re-frisk-shell.re-com.ui}, :cljs.spec/speced-vars [], :uses {h-box re-com.core, p re-com.core, input-textarea re-com.core, h-split re-frisk-shell.re-com.splits, small-button re-frisk-shell.re-com.ui, input-text re-com.core, scroller re-frisk-shell.re-com.ui, checkbox re-com.core, box re-com.core, star re-frisk-shell.re-com.vendors, v-box re-com.core, v-split re-frisk-shell.re-com.splits, label re-com.core, gap re-com.core}, :defs {event-list-item {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 13, :column 7, :end-line 13, :end-column 22, :arglists (quote ([]))}, :name re-frisk-shell.re-com.views/event-list-item, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, filter-event {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([text]))}, :name re-frisk-shell.re-com.views/filter-event, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 19, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, events-scroller {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 45, :column 7, :end-line 45, :end-column 22, :arglists (quote ([filtered-events checkbox-val deb-data]))}, :name re-frisk-shell.re-com.views/events-scroller, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 22, :method-params ([filtered-events checkbox-val deb-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([filtered-events checkbox-val deb-data]))}, events-view {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([re-frame-events deb-data imp-hndl exp-hndl]))}, :name re-frisk-shell.re-com.views/events-view, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 18, :method-params ([re-frame-events deb-data imp-hndl exp-hndl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([re-frame-events deb-data imp-hndl exp-hndl]))}, event-bar {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 103, :column 7, :end-line 103, :end-column 16, :arglists (quote ([deb-data]))}, :name re-frisk-shell.re-com.views/event-bar, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 16, :method-params ([deb-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([deb-data]))}, main-view {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 117, :column 7, :end-line 117, :end-column 16, :arglists (quote ([re-frame-data deb-data doc]))}, :name re-frisk-shell.re-com.views/main-view, :variadic false, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 16, :method-params ([re-frame-data deb-data doc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 3, :fn-var true, :arglists (quote ([re-frame-data deb-data doc]))}, main {:protocol-inline nil, :meta {:file "C:\\Dosbol\\clojure\\healthsamurai\\meeting\\docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :line 176, :column 7, :end-line 176, :end-column 11, :arglists (quote ([re-frame-data re-frame-events deb-data & [doc imp-hndl exp-hndl]])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(re-frame-data re-frame-events deb-data [doc imp-hndl exp-hndl])], :arglists ([re-frame-data re-frame-events deb-data & [doc imp-hndl exp-hndl]]), :arglists-meta (nil)}}, :name re-frisk-shell.re-com.views/main, :variadic true, :file "docs\\js\\compiled\\out\\re_frisk_shell\\re_com\\views.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(re-frame-data re-frame-events deb-data [doc imp-hndl exp-hndl])], :arglists ([re-frame-data re-frame-events deb-data & [doc imp-hndl exp-hndl]]), :arglists-meta (nil)}, :method-params [(re-frame-data re-frame-events deb-data [doc imp-hndl exp-hndl])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 3, :fn-var true, :arglists ([re-frame-data re-frame-events deb-data & [doc imp-hndl exp-hndl]])}}, :cljs.spec/registry-ref [], :require-macros {reagent.ratom reagent.ratom, reagent reagent.core, reagent.core reagent.core, re-com.core re-com.core}, :cljs.analyzer/constants {:seen #{:re-frisk-sorted :evnt-colors :children :align :max-length :on-scroll :pre :key :placeholder :indx :white-space :value :background-color :scroll-bottom? :width :component-did-update :type :on-click :size :center :style :div :document :event :reagent-render :padding-top :label :class :event-data :padding :change-on-blur? :gap :display-name :child :input :panel-1 :on-change :panel-2 :auto :href :app-db :a :height :initial-split :span :margin :model}, :order [:evnt-colors :event :event-data :indx :children :div :style :width :background-color :size :child :a :href :class :on-click :padding :white-space :pre :span :display-name :component-did-update :reagent-render :scroll-bottom? :on-scroll :key :height :auto :model :change-on-blur? :placeholder :on-change :label :align :center :gap :padding-top :input :type :value :max-length :document :margin :initial-split :panel-1 :panel-2 :app-db :re-frisk-sorted]}, :doc nil}